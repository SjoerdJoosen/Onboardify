// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end.DAL;

namespace back_end.Migrations
{
    [DbContext(typeof(QuestContext))]
    [Migration("20210930084559_RemovedSubQuestInQuest")]
    partial class RemovedSubQuestInQuest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("back_end.Models.Quest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Quest");
                });

            modelBuilder.Entity("back_end.Models.SubQuest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int?>("QuestID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("QuestID");

                    b.ToTable("SubQuest");
                });

            modelBuilder.Entity("back_end.Models.SubQuest", b =>
                {
                    b.HasOne("back_end.Models.Quest", null)
                        .WithMany("subQuests")
                        .HasForeignKey("QuestID");
                });

            modelBuilder.Entity("back_end.Models.Quest", b =>
                {
                    b.Navigation("subQuests");
                });
#pragma warning restore 612, 618
        }
    }
}
